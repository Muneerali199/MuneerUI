{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "TiltedCard-TS-CSS",
  "type": "registry:block",
  "title": "TiltedCard",
  "description": "3D perspective tilt card reacting to pointer.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "public/ts/default/src/ts-default/Components/TiltedCard/TiltedCard.tsx",
      "content": "import type { SpringOptions } from 'motion/react';\nimport { useRef, useState } from 'react';\nimport { motion, useMotionValue, useSpring } from 'motion/react';\nimport './TiltedCard.css';\n\ninterface TiltedCardProps {\n  imageSrc: React.ComponentProps<'img'>['src'];\n  altText?: string;\n  captionText?: string;\n  containerHeight?: React.CSSProperties['height'];\n  containerWidth?: React.CSSProperties['width'];\n  imageHeight?: React.CSSProperties['height'];\n  imageWidth?: React.CSSProperties['width'];\n  scaleOnHover?: number;\n  rotateAmplitude?: number;\n  showMobileWarning?: boolean;\n  showTooltip?: boolean;\n  overlayContent?: React.ReactNode;\n  displayOverlayContent?: boolean;\n}\n\nconst springValues: SpringOptions = {\n  damping: 30,\n  stiffness: 100,\n  mass: 2\n};\n\nexport default function TiltedCard({\n  imageSrc,\n  altText = 'Tilted card image',\n  captionText = '',\n  containerHeight = '300px',\n  containerWidth = '100%',\n  imageHeight = '300px',\n  imageWidth = '300px',\n  scaleOnHover = 1.1,\n  rotateAmplitude = 14,\n  showMobileWarning = true,\n  showTooltip = true,\n  overlayContent = null,\n  displayOverlayContent = false\n}: TiltedCardProps) {\n  const ref = useRef<HTMLElement>(null);\n\n  const x = useMotionValue(0);\n  const y = useMotionValue(0);\n  const rotateX = useSpring(useMotionValue(0), springValues);\n  const rotateY = useSpring(useMotionValue(0), springValues);\n  const scale = useSpring(1, springValues);\n  const opacity = useSpring(0);\n  const rotateFigcaption = useSpring(0, {\n    stiffness: 350,\n    damping: 30,\n    mass: 1\n  });\n\n  const [lastY, setLastY] = useState<number>(0);\n\n  function handleMouse(e: React.MouseEvent<HTMLElement>) {\n    if (!ref.current) return;\n\n    const rect = ref.current.getBoundingClientRect();\n    const offsetX = e.clientX - rect.left - rect.width / 2;\n    const offsetY = e.clientY - rect.top - rect.height / 2;\n\n    const rotationX = (offsetY / (rect.height / 2)) * -rotateAmplitude;\n    const rotationY = (offsetX / (rect.width / 2)) * rotateAmplitude;\n\n    rotateX.set(rotationX);\n    rotateY.set(rotationY);\n\n    x.set(e.clientX - rect.left);\n    y.set(e.clientY - rect.top);\n\n    const velocityY = offsetY - lastY;\n    rotateFigcaption.set(-velocityY * 0.6);\n    setLastY(offsetY);\n  }\n\n  function handleMouseEnter() {\n    scale.set(scaleOnHover);\n    opacity.set(1);\n  }\n\n  function handleMouseLeave() {\n    opacity.set(0);\n    scale.set(1);\n    rotateX.set(0);\n    rotateY.set(0);\n    rotateFigcaption.set(0);\n  }\n\n  return (\n    <figure\n      ref={ref}\n      className=\"tilted-card-figure\"\n      style={{\n        height: containerHeight,\n        width: containerWidth\n      }}\n      onMouseMove={handleMouse}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      {showMobileWarning && (\n        <div className=\"tilted-card-mobile-alert\">This effect is not optimized for mobile. Check on desktop.</div>\n      )}\n\n      <motion.div\n        className=\"tilted-card-inner\"\n        style={{\n          width: imageWidth,\n          height: imageHeight,\n          rotateX,\n          rotateY,\n          scale\n        }}\n      >\n        <motion.img\n          src={imageSrc}\n          alt={altText}\n          className=\"tilted-card-img\"\n          style={{\n            width: imageWidth,\n            height: imageHeight\n          }}\n        />\n\n        {displayOverlayContent && overlayContent && (\n          <motion.div className=\"tilted-card-overlay\">{overlayContent}</motion.div>\n        )}\n      </motion.div>\n\n      {showTooltip && (\n        <motion.figcaption\n          className=\"tilted-card-caption\"\n          style={{\n            x,\n            y,\n            opacity,\n            rotate: rotateFigcaption\n          }}\n        >\n          {captionText}\n        </motion.figcaption>\n      )}\n    </figure>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "public/ts/default/src/ts-default/Components/TiltedCard/TiltedCard.css",
      "content": ".tilted-card-figure {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  perspective: 800px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.tilted-card-mobile-alert {\r\n  position: absolute;\r\n  top: 1rem;\r\n  text-align: center;\r\n  font-size: 0.875rem;\r\n  display: none;\r\n}\r\n\r\n@media (max-width: 640px) {\r\n  .tilted-card-mobile-alert {\r\n    display: block;\r\n  }\r\n  .tilted-card-caption {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.tilted-card-inner {\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n}\r\n\r\n.tilted-card-img {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  object-fit: cover;\r\n  border-radius: 15px;\r\n  will-change: transform;\r\n  transform: translateZ(0);\r\n}\r\n\r\n.tilted-card-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 2;\r\n  will-change: transform;\r\n  transform: translateZ(30px);\r\n}\r\n\r\n.tilted-card-caption {\r\n  pointer-events: none;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  padding: 4px 10px;\r\n  font-size: 10px;\r\n  color: #2d2d2d;\r\n  opacity: 0;\r\n  z-index: 3;\r\n}\r\n",
      "type": "registry:item"
    }
  ]
}