{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "GlareHover-JS-CSS",
  "type": "registry:block",
  "title": "GlareHover",
  "description": "Adds a realistic moving glare highlight on hover over any element.",
  "files": [
    {
      "path": "public/default/src/content/Animations/GlareHover/GlareHover.jsx",
      "content": "import './GlareHover.css';\n\nconst GlareHover = ({\n  width = '500px',\n  height = '500px',\n  background = '#000',\n  borderRadius = '10px',\n  borderColor = '#333',\n  children,\n  glareColor = '#ffffff',\n  glareOpacity = 0.5,\n  glareAngle = -45,\n  glareSize = 250,\n  transitionDuration = 650,\n  playOnce = false,\n  className = '',\n  style = {}\n}) => {\n  const hex = glareColor.replace('#', '');\n  let rgba = glareColor;\n  if (/^[0-9A-Fa-f]{6}$/.test(hex)) {\n    const r = parseInt(hex.slice(0, 2), 16);\n    const g = parseInt(hex.slice(2, 4), 16);\n    const b = parseInt(hex.slice(4, 6), 16);\n    rgba = `rgba(${r}, ${g}, ${b}, ${glareOpacity})`;\n  } else if (/^[0-9A-Fa-f]{3}$/.test(hex)) {\n    const r = parseInt(hex[0] + hex[0], 16);\n    const g = parseInt(hex[1] + hex[1], 16);\n    const b = parseInt(hex[2] + hex[2], 16);\n    rgba = `rgba(${r}, ${g}, ${b}, ${glareOpacity})`;\n  }\n\n  const vars = {\n    '--gh-width': width,\n    '--gh-height': height,\n    '--gh-bg': background,\n    '--gh-br': borderRadius,\n    '--gh-angle': `${glareAngle}deg`,\n    '--gh-duration': `${transitionDuration}ms`,\n    '--gh-size': `${glareSize}%`,\n    '--gh-rgba': rgba,\n    '--gh-border': borderColor\n  };\n\n  return (\n    <div\n      className={`glare-hover ${playOnce ? 'glare-hover--play-once' : ''} ${className}`}\n      style={{ ...vars, ...style }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default GlareHover;\n",
      "type": "registry:component"
    },
    {
      "path": "public/default/src/content/Animations/GlareHover/GlareHover.css",
      "content": ".glare-hover {\r\n  width: var(--gh-width);\r\n  height: var(--gh-height);\r\n  background: var(--gh-bg);\r\n  border-radius: var(--gh-br);\r\n  border: 1px solid var(--gh-border);\r\n  overflow: hidden;\r\n  position: relative;\r\n  display: grid;\r\n  place-items: center;\r\n}\r\n\r\n.glare-hover::before {\r\n  content: '';\r\n  position: absolute;\r\n  inset: 0;\r\n  background: linear-gradient(\r\n    var(--gh-angle),\r\n    hsla(0, 0%, 0%, 0) 60%,\r\n    var(--gh-rgba) 70%,\r\n    hsla(0, 0%, 0%, 0),\r\n    hsla(0, 0%, 0%, 0) 100%\r\n  );\r\n  transition: var(--gh-duration) ease;\r\n  background-size:\r\n    var(--gh-size) var(--gh-size),\r\n    100% 100%;\r\n  background-repeat: no-repeat;\r\n  background-position:\r\n    -100% -100%,\r\n    0 0;\r\n}\r\n\r\n.glare-hover:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n.glare-hover:hover::before {\r\n  background-position:\r\n    100% 100%,\r\n    0 0;\r\n}\r\n\r\n.glare-hover--play-once::before {\r\n  transition: none;\r\n}\r\n\r\n.glare-hover--play-once:hover::before {\r\n  transition: var(--gh-duration) ease;\r\n  background-position:\r\n    100% 100%,\r\n    0 0;\r\n}\r\n",
      "type": "registry:item"
    }
  ]
}