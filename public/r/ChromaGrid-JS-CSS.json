{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ChromaGrid-JS-CSS",
  "type": "registry:block",
  "title": "ChromaGrid",
  "description": "A responsive grid of grayscale tiles. Hovering the grid reaveals their colors.",
  "dependencies": [
    "gsap"
  ],
  "files": [
    {
      "path": "public/default/src/content/Components/ChromaGrid/ChromaGrid.jsx",
      "content": "import { useRef, useEffect } from 'react';\nimport { gsap } from 'gsap';\nimport './ChromaGrid.css';\n\nexport const ChromaGrid = ({\n  items,\n  className = '',\n  radius = 300,\n  columns = 3,\n  rows = 2,\n  damping = 0.45,\n  fadeOut = 0.6,\n  ease = 'power3.out'\n}) => {\n  const rootRef = useRef(null);\n  const fadeRef = useRef(null);\n  const setX = useRef(null);\n  const setY = useRef(null);\n  const pos = useRef({ x: 0, y: 0 });\n\n  const demo = [\n    {\n      image: 'https://i.pravatar.cc/300?img=8',\n      title: 'Alex Rivera',\n      subtitle: 'Full Stack Developer',\n      handle: '@alexrivera',\n      borderColor: '#4F46E5',\n      gradient: 'linear-gradient(145deg, #4F46E5, #000)',\n      url: 'https://github.com/'\n    },\n    {\n      image: 'https://i.pravatar.cc/300?img=11',\n      title: 'Jordan Chen',\n      subtitle: 'DevOps Engineer',\n      handle: '@jordanchen',\n      borderColor: '#10B981',\n      gradient: 'linear-gradient(210deg, #10B981, #000)',\n      url: 'https://linkedin.com/in/'\n    },\n    {\n      image: 'https://i.pravatar.cc/300?img=3',\n      title: 'Morgan Blake',\n      subtitle: 'UI/UX Designer',\n      handle: '@morganblake',\n      borderColor: '#F59E0B',\n      gradient: 'linear-gradient(165deg, #F59E0B, #000)',\n      url: 'https://dribbble.com/'\n    },\n    {\n      image: 'https://i.pravatar.cc/300?img=16',\n      title: 'Casey Park',\n      subtitle: 'Data Scientist',\n      handle: '@caseypark',\n      borderColor: '#EF4444',\n      gradient: 'linear-gradient(195deg, #EF4444, #000)',\n      url: 'https://kaggle.com/'\n    },\n    {\n      image: 'https://i.pravatar.cc/300?img=25',\n      title: 'Sam Kim',\n      subtitle: 'Mobile Developer',\n      handle: '@thesamkim',\n      borderColor: '#8B5CF6',\n      gradient: 'linear-gradient(225deg, #8B5CF6, #000)',\n      url: 'https://github.com/'\n    },\n    {\n      image: 'https://i.pravatar.cc/300?img=60',\n      title: 'Tyler Rodriguez',\n      subtitle: 'Cloud Architect',\n      handle: '@tylerrod',\n      borderColor: '#06B6D4',\n      gradient: 'linear-gradient(135deg, #06B6D4, #000)',\n      url: 'https://aws.amazon.com/'\n    }\n  ];\n  const data = items?.length ? items : demo;\n\n  useEffect(() => {\n    const el = rootRef.current;\n    if (!el) return;\n    setX.current = gsap.quickSetter(el, '--x', 'px');\n    setY.current = gsap.quickSetter(el, '--y', 'px');\n    const { width, height } = el.getBoundingClientRect();\n    pos.current = { x: width / 2, y: height / 2 };\n    setX.current(pos.current.x);\n    setY.current(pos.current.y);\n  }, []);\n\n  const moveTo = (x, y) => {\n    gsap.to(pos.current, {\n      x,\n      y,\n      duration: damping,\n      ease,\n      onUpdate: () => {\n        setX.current?.(pos.current.x);\n        setY.current?.(pos.current.y);\n      },\n      overwrite: true\n    });\n  };\n\n  const handleMove = e => {\n    const r = rootRef.current.getBoundingClientRect();\n    moveTo(e.clientX - r.left, e.clientY - r.top);\n    gsap.to(fadeRef.current, { opacity: 0, duration: 0.25, overwrite: true });\n  };\n\n  const handleLeave = () => {\n    gsap.to(fadeRef.current, {\n      opacity: 1,\n      duration: fadeOut,\n      overwrite: true\n    });\n  };\n\n  const handleCardClick = url => {\n    if (url) {\n      window.open(url, '_blank', 'noopener,noreferrer');\n    }\n  };\n\n  const handleCardMove = e => {\n    const card = e.currentTarget;\n    const rect = card.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    card.style.setProperty('--mouse-x', `${x}px`);\n    card.style.setProperty('--mouse-y', `${y}px`);\n  };\n\n  return (\n    <div\n      ref={rootRef}\n      className={`chroma-grid ${className}`}\n      style={{\n        '--r': `${radius}px`,\n        '--cols': columns,\n        '--rows': rows\n      }}\n      onPointerMove={handleMove}\n      onPointerLeave={handleLeave}\n    >\n      {data.map((c, i) => (\n        <article\n          key={i}\n          className=\"chroma-card\"\n          onMouseMove={handleCardMove}\n          onClick={() => handleCardClick(c.url)}\n          style={{\n            '--card-border': c.borderColor || 'transparent',\n            '--card-gradient': c.gradient,\n            cursor: c.url ? 'pointer' : 'default'\n          }}\n        >\n          <div className=\"chroma-img-wrapper\">\n            <img src={c.image} alt={c.title} loading=\"lazy\" />\n          </div>\n          <footer className=\"chroma-info\">\n            <h3 className=\"name\">{c.title}</h3>\n            {c.handle && <span className=\"handle\">{c.handle}</span>}\n            <p className=\"role\">{c.subtitle}</p>\n            {c.location && <span className=\"location\">{c.location}</span>}\n          </footer>\n        </article>\n      ))}\n      <div className=\"chroma-overlay\" />\n      <div ref={fadeRef} className=\"chroma-fade\" />\n    </div>\n  );\n};\n\nexport default ChromaGrid;\n",
      "type": "registry:component"
    },
    {
      "path": "public/default/src/content/Components/ChromaGrid/ChromaGrid.css",
      "content": ".chroma-grid {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(var(--cols, 3), 320px);\r\n  grid-auto-rows: auto;\r\n  justify-content: center;\r\n  gap: 0.75rem;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 1rem;\r\n  box-sizing: border-box;\r\n\r\n  --x: 50%;\r\n  --y: 50%;\r\n  --r: 220px;\r\n}\r\n\r\n@media (max-width: 1124px) {\r\n  .chroma-grid {\r\n    grid-template-columns: repeat(auto-fit, minmax(320px, 320px));\r\n    gap: 0.5rem;\r\n    padding: 0.5rem;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .chroma-grid {\r\n    grid-template-columns: 320px;\r\n    gap: 0.75rem;\r\n    padding: 1rem;\r\n  }\r\n}\r\n\r\n.chroma-card {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 320px;\r\n  height: auto;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n  border: 1px solid #333;\r\n  transition: border-color 0.3s ease;\r\n  background: var(--card-gradient);\r\n\r\n  --mouse-x: 50%;\r\n  --mouse-y: 50%;\r\n  --spotlight-color: rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n.chroma-card:hover {\r\n  border-color: var(--card-border);\r\n}\r\n\r\n.chroma-card::before {\r\n  content: '';\r\n  position: absolute;\r\n  inset: 0;\r\n  background: radial-gradient(circle at var(--mouse-x) var(--mouse-y), var(--spotlight-color), transparent 70%);\r\n  pointer-events: none;\r\n  opacity: 0;\r\n  transition: opacity 0.5s ease;\r\n  z-index: 2;\r\n}\r\n\r\n.chroma-card:hover::before {\r\n  opacity: 1;\r\n}\r\n\r\n.chroma-img-wrapper {\r\n  position: relative;\r\n  z-index: 1;\r\n  flex: 1;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  background: transparent;\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.chroma-img-wrapper img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 10px;\r\n  display: block;\r\n}\r\n\r\n.chroma-info {\r\n  position: relative;\r\n  z-index: 1;\r\n  padding: 0.75rem 1rem;\r\n  color: #fff;\r\n  font-family: system-ui, sans-serif;\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  row-gap: 0.25rem;\r\n  column-gap: 0.75rem;\r\n}\r\n\r\n.chroma-info .role,\r\n.chroma-info .handle {\r\n  color: #aaa;\r\n}\r\n\r\n.chroma-overlay {\r\n  position: absolute;\r\n  inset: 0;\r\n  pointer-events: none;\r\n  z-index: 3;\r\n  backdrop-filter: grayscale(1) brightness(0.78);\r\n  -webkit-backdrop-filter: grayscale(1) brightness(0.78);\r\n  background: rgba(0, 0, 0, 0.001);\r\n\r\n  mask-image: radial-gradient(\r\n    circle var(--r) at var(--x) var(--y),\r\n    transparent 0%,\r\n    transparent 15%,\r\n    rgba(0, 0, 0, 0.1) 30%,\r\n    rgba(0, 0, 0, 0.22) 45%,\r\n    rgba(0, 0, 0, 0.35) 60%,\r\n    rgba(0, 0, 0, 0.5) 75%,\r\n    rgba(0, 0, 0, 0.68) 88%,\r\n    white 100%\r\n  );\r\n  -webkit-mask-image: radial-gradient(\r\n    circle var(--r) at var(--x) var(--y),\r\n    transparent 0%,\r\n    transparent 15%,\r\n    rgba(0, 0, 0, 0.1) 30%,\r\n    rgba(0, 0, 0, 0.22) 45%,\r\n    rgba(0, 0, 0, 0.35) 60%,\r\n    rgba(0, 0, 0, 0.5) 75%,\r\n    rgba(0, 0, 0, 0.68) 88%,\r\n    white 100%\r\n  );\r\n}\r\n\r\n.chroma-fade {\r\n  position: absolute;\r\n  inset: 0;\r\n  pointer-events: none;\r\n  z-index: 4;\r\n  backdrop-filter: grayscale(1) brightness(0.78);\r\n  -webkit-backdrop-filter: grayscale(1) brightness(0.78);\r\n  background: rgba(0, 0, 0, 0.001);\r\n\r\n  mask-image: radial-gradient(\r\n    circle var(--r) at var(--x) var(--y),\r\n    white 0%,\r\n    white 15%,\r\n    rgba(255, 255, 255, 0.9) 30%,\r\n    rgba(255, 255, 255, 0.78) 45%,\r\n    rgba(255, 255, 255, 0.65) 60%,\r\n    rgba(255, 255, 255, 0.5) 75%,\r\n    rgba(255, 255, 255, 0.32) 88%,\r\n    transparent 100%\r\n  );\r\n  -webkit-mask-image: radial-gradient(\r\n    circle var(--r) at var(--x) var(--y),\r\n    white 0%,\r\n    white 15%,\r\n    rgba(255, 255, 255, 0.9) 30%,\r\n    rgba(255, 255, 255, 0.78) 45%,\r\n    rgba(255, 255, 255, 0.65) 60%,\r\n    rgba(255, 255, 255, 0.5) 75%,\r\n    rgba(255, 255, 255, 0.32) 88%,\r\n    transparent 100%\r\n  );\r\n\r\n  opacity: 1;\r\n  transition: opacity 0.25s ease;\r\n}\r\n",
      "type": "registry:item"
    }
  ]
}