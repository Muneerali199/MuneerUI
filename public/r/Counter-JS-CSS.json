{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "Counter-JS-CSS",
  "type": "registry:block",
  "title": "Counter",
  "description": "Flexible animated counter supporting increments + easing.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "public/default/src/content/Components/Counter/Counter.jsx",
      "content": "import { motion, useSpring, useTransform } from 'motion/react';\nimport { useEffect } from 'react';\n\nimport './Counter.css';\n\nfunction Number({ mv, number, height }) {\n  let y = useTransform(mv, latest => {\n    let placeValue = latest % 10;\n    let offset = (10 + number - placeValue) % 10;\n    let memo = offset * height;\n    if (offset > 5) {\n      memo -= 10 * height;\n    }\n    return memo;\n  });\n  return (\n    <motion.span className=\"counter-number\" style={{ y }}>\n      {number}\n    </motion.span>\n  );\n}\n\nfunction Digit({ place, value, height, digitStyle }) {\n  let valueRoundedToPlace = Math.floor(value / place);\n  let animatedValue = useSpring(valueRoundedToPlace);\n  useEffect(() => {\n    animatedValue.set(valueRoundedToPlace);\n  }, [animatedValue, valueRoundedToPlace]);\n  return (\n    <div className=\"counter-digit\" style={{ height, ...digitStyle }}>\n      {Array.from({ length: 10 }, (_, i) => (\n        <Number key={i} mv={animatedValue} number={i} height={height} />\n      ))}\n    </div>\n  );\n}\n\nexport default function Counter({\n  value,\n  fontSize = 100,\n  padding = 0,\n  places = [100, 10, 1],\n  gap = 8,\n  borderRadius = 4,\n  horizontalPadding = 8,\n  textColor = 'white',\n  fontWeight = 'bold',\n  containerStyle,\n  counterStyle,\n  digitStyle,\n  gradientHeight = 16,\n  gradientFrom = 'black',\n  gradientTo = 'transparent',\n  topGradientStyle,\n  bottomGradientStyle\n}) {\n  const height = fontSize + padding;\n  const defaultCounterStyle = {\n    fontSize,\n    gap: gap,\n    borderRadius: borderRadius,\n    paddingLeft: horizontalPadding,\n    paddingRight: horizontalPadding,\n    color: textColor,\n    fontWeight: fontWeight\n  };\n  const defaultTopGradientStyle = {\n    height: gradientHeight,\n    background: `linear-gradient(to bottom, ${gradientFrom}, ${gradientTo})`\n  };\n  const defaultBottomGradientStyle = {\n    height: gradientHeight,\n    background: `linear-gradient(to top, ${gradientFrom}, ${gradientTo})`\n  };\n  return (\n    <div className=\"counter-container\" style={containerStyle}>\n      <div className=\"counter-counter\" style={{ ...defaultCounterStyle, ...counterStyle }}>\n        {places.map(place => (\n          <Digit key={place} place={place} value={value} height={height} digitStyle={digitStyle} />\n        ))}\n      </div>\n      <div className=\"gradient-container\">\n        <div className=\"top-gradient\" style={topGradientStyle ? topGradientStyle : defaultTopGradientStyle}></div>\n        <div\n          className=\"bottom-gradient\"\n          style={bottomGradientStyle ? bottomGradientStyle : defaultBottomGradientStyle}\n        ></div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "public/default/src/content/Components/Counter/Counter.css",
      "content": ".counter-container {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.counter-counter {\r\n  display: flex;\r\n  overflow: hidden;\r\n  line-height: 1;\r\n}\r\n\r\n.counter-digit {\r\n  position: relative;\r\n  width: 1ch;\r\n  font-variant-numeric: tabular-nums;\r\n}\r\n\r\n.counter-number {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.gradient-container {\r\n  pointer-events: none;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n.bottom-gradient {\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n}\r\n",
      "type": "registry:item"
    }
  ]
}